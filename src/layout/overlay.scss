// stylelint-disable selector-no-qualifying-type, selector-max-type, selector-max-specificity, selector-max-compound-selectors

// Overlay component

.Overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 99;
  display: flex;
  padding: $spacer-3;
  pointer-events: none;
  flex-direction: column;
}

// Backdrop
.Overlay::before {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  pointer-events: none;
  content: "";
  background-color: $black-fade-50;
}

// The box of the overlay
.Overlay-box {
  position: relative;
  display: flex;
  max-height: 60%;
  margin: auto 0;
  pointer-events: auto;
  flex-direction: column;
  background-color: $bg-white;
  border: $border-width $border-style $border-gray-darker;
  border-radius: $border-radius;
  box-shadow: 0 0 18px rgba(0, 0, 0, 0.4);
}

// Header
.Overlay-header {
  display: flex;
  padding: $spacer-3;
  background-color: $bg-gray;
  border-bottom: $border;
  border-top-left-radius: $border-radius;
  border-top-right-radius: $border-radius;
}

.Overlay-title {
  flex: auto;
  font-size: $body-font-size;
  font-weight: $font-weight-bold;
}

.Overlay-closeButton {
  padding: 0;
  fill: $text-gray-light;
  background-color: transparent;
  border: 0;
}

.Overlay-content {
  flex: auto;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch; // Adds momentum + bouncy scrolling
}

// Footer
.Overlay-footer {
  padding: $spacer-3;
  background-color: $bg-gray;
  border-top: $border;
  border-bottom-right-radius: $border-radius;
  border-bottom-left-radius: $border-radius;
}

// Modifiers

// .Overlay--blocking -> In case an action is needed before closing the .Overlay
.Overlay--blocking {
  &::before {
    pointer-events: auto;
  }

  .Overlay-closeButton {
    display: none;
  }
}

// Responsive Modifiers

@include breakpoint(sm) {
  .Overlay--caretTop .Overlay-box {
    &::before,
    &::after {
      position: absolute;
      left: 50%;
      display: inline-block;
      content: "";
    }

    &::before {
      top: -$spacer-3;
      margin-left: -9px;
      border: $spacer-2 $border-style transparent;
      border-bottom-color: $border-black-fade;
    }

    &::after {
      top: -14px;
      margin-left: -$spacer-2;
      border: 7px $border-style transparent;
      border-bottom-color: $bg-white;
    }
  }
}

// Default .Overlay
@include breakpoint(sm) {
  .Overlay-box {
    max-width: $width-sm;
    max-height: none;
    margin: auto;
  }
}

// Compact version for wider screens
.Overlay--dropdown,
.Overlay--selectMenu,
.Overlay--popover {
  @include breakpoint(sm) {
    position: absolute;
    top: auto;
    right: auto;
    bottom: auto;
    left: auto;
    padding: 0;

    // Backdrop
    &::before {
      display: none;
    }

    .Overlay-box {
      margin: $spacer-1 0 $spacer-3 0;
      border-color: $border-gray-dark;
      box-shadow: $box-shadow-medium;
    }

    .Overlay-header,
    .Overlay-footer {
      padding: $spacer-2;
    }
  }
}

.Overlay--dropdown {
  @include breakpoint(sm) {
    .Overlay-box {
      width: auto;
      max-width: 250px;
      max-height: none;
    }
  }
}

.Overlay--selectMenu {
  @media (max-width: ($width-sm - 1px)) {
    .Overlay-box {
      height: 80%;
      max-height: none;
      margin-top: 0;
    }
  }

  @include breakpoint(sm) {
    .Overlay-box {
      width: 250px;
      height: auto;
      max-height: 350px;
    }
  }
}

.Overlay--popover {
  .Overlay-box {
    margin-bottom: 0;
  }

  .Overlay-closeButton {
    position: absolute;
    top: $spacer-3;
    right: $spacer-3;
  }

  @media (max-width: ($width-sm - 1px)) {
    .Overlay-box {
      border-color: $border-gray-dark;
      box-shadow: $box-shadow-medium;
    }

    &::before {
      display: none;
    }
  }
}
